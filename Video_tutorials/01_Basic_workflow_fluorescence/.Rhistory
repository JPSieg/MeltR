library(MeltR)
?meltR.A
library(MeltR)
library(tidyverse)
library(cowplot)
devtools::load_all()
Tm.range = c(40, 55)
Mmodel_names <- c("Monomolecular.2State",
"Monomolecular.3State",
"Heteroduplex.2State",
"Homoduplex.2State")
Mmodels <- list(function(K){ (K/(1+K)) },
function(K1, K2, Ct){ 1/(1 + K1 + (K1*K2)) },
function(K, Ct){ ( (2/(K*Ct)) + 2 - sqrt(((((2/(K*Ct)) + 2)^2) - 4)))/2 },
function(K, Ct){ ((1/(2*K*Ct)) + 2 - sqrt(((((1/(2*K*Ct)) + 2)^2) - 4)))/2 })
names(Mmodels) <- Mmodel_names
G_VH = function(H, S, Temperature){exp((S/0.0019872) - ((1/((Temperature + 273.15)*0.0019872))*H))}
f = function(H, S, Temperature, Ct){
K <- G_VH(H = H, S = S, Temperature = Temperature)
model <- Mmodels$Heteroduplex.2State(K = K, Ct = Ct)
return(model)
}
df = df.absorbance %>% filter(Experiment == "Helix A")
ggplot(df, aes(x = Temperature, y = Absorbance)) +
facet_wrap(~Sample, scales = "free") +
geom_point()
library(MeltR)
library(tidyverse)
library(cowplot)
devtools::load_all()
remove.packages("MeltR")
q()
remove.packages()
remove.packages("MeltR")
remove.packages("MeltR")
q()
remove.packages("MeltR")
remove.packages("MeltR")
remove.packages("MeltR")
q()
library(MeltR)
?meltR.A
remove.packages("MeltR")
q()
remove.packages("MeltR")
library(MeltR)
remove.packages("MeltR")
setwd("~/Jacob/R_packages/MeltR/Video_tutorials/01_Basic_workflow_fluorescence")
library(MeltR)
library(MeltR)
library(tidyverse)
library(ggrepel)
list.files()
df = read.csv("js5060_Helix_J_formatted.csv")
head(df)
ggplot(df %>% filter(Reading == 1), aes(x = B, y = Emission, label = Well)) +
geom_point() +
geom_text_repel()
ggplot(df %>% filter(Reading == 40), aes(x = B, y = Emission, label = Well)) +
geom_point() +
geom_text_repel()
ggplot(df %>% filter(Reading == 100), aes(x = B, y = Emission, label = Well)) +
geom_point() +
geom_text_repel()
?meltR.F
meltR.F(df)
meltR.F(df, Save_results = "all")
meltR.F(df, Save_results = "all",
Kd_error_quantile = 0.5,
Kd_range = c(50, 500))
meltR.F(df, Save_results = "all",
Kd_error_quantile = 0.4,
Kd_range = c(50, 500))
meltR.F(df, Save_results = "all",
Kd_error_quantile = 0.45,
Kd_range = c(50, 500))
meltR.F(df, Save_results = "all",
Kd_error_quantile = 0.48,
Kd_range = c(50, 500))
fit = meltR.F(df, Save_results = "all",
Kd_error_quantile = 0.48,
Kd_range = c(50, 500))
fit$Tms
fit$VH_method_1_fit
summary(fit$VH_method_1_fit)
coef(summary(fit$VH_method_1_fit))
